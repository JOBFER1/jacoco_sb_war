pipeline{
    agent any
    tools{
        maven 'MAVEN_3_8_6'
        jdk 'JDK_11'
    }
    environment {
    	ARTIFACTID = readMavenPom().getArtifactId()
    	VERSION = readMavenPom().getVersion()
    	GROUPID = readMavenPom().getGroupId()
    	PACKAGING = readMavenPom().getPackaging()
    }    
    stages{
    	stage('Inicio') {
    		steps {
    			bat "echo Hola"
    	    	echo "${ARTIFACTID}"
    	    	echo "${VERSION}"
    	    	echo "${GROUPID}"
    	    	echo "${PACKAGING}"
    		}
    	}

        stage ('Compilar') {
            steps {
//                bat './mvnw clean package'
                bat 'mvn clean package'
            }
        }
        
        stage('Tests y Jacoco') {
            steps {
                junit 'target/surefire-reports/**/*.xml'
                jacoco()
            }
        }
        
        stage('SonarQube') {
            steps{
                withSonarQubeEnv(installationName: 'Sonar 7.9.6', credentialsId: 'Token-Sonar') {
                	bat 'mvn sonar:sonar'
                }
            }
        }

        stage ('Nexus') {
			steps {
		    	nexusPublisher nexusInstanceId: 'NEXUS_1', nexusRepositoryId: 'maven-releases', 
					packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', 
					filePath: "./target/${ARTIFACTID}-${VERSION}.${PACKAGING}"]],
					mavenCoordinate: [artifactId: "${ARTIFACTID}", groupId: "${GROUPID}", packaging: "${PACKAGING}", version: "${VERSION}"]]]
			}
        }        
        stage ('Tomcat') {    
            steps {        
                bat "powershell Copy-Item target/jacoco_sb_war-0.0.1.war -Destination C:/apache-tomcat-9.0.74/webapps"
//                deploy adapters: [tomcat9(credentialsId: 'credenciales_tomcat', path: '', url: 'http://localhost:8080')], contextPath: null, war: '**/*.war'
            }
        }
        
    }
    post {
    	always {
    		cleanWs()
    		dir("${env.WORKSPACE}@tmp") {
    			deleteDir()
    		}
    		dir("${env.WORKSPACE}@script") {
    			deleteDir()
    		}
    	}
    }    
}